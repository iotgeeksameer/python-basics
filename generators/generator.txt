If a function contains at least one yield statement (it may contain other yield or return statements), it becomes a generator function. 
Both yield and return will return some value from a function.

The difference is that, while a return statement terminates a function entirely, 
yield statement pauses the function saving all its states and later continues from there on successive calls.


Once the function yields, the function is paused and the control is transferred to the caller.
Local variables and their states are remembered between successive calls.
Finally, when the function terminates, StopIteration is raised automatically on further calls.
